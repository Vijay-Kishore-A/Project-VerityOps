name: VerityOps Build Pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install tools & clone avbtool
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y e2fsprogs xxd openssl git python3
          git clone https://android.googlesource.com/platform/external/avb
          ls -la avb
          test -f avb/avbtool.py || { echo "❌ avbtool.py not found after clone"; exit 1; }

      - name: Create minimal ext4 system image (128 MiB)
        run: |
          set -euo pipefail
          dd if=/dev/zero of=system.img bs=1M count=128
          mkfs.ext4 -F -L system system.img
          stat -c "Created system.img size=%s bytes" system.img

      - name: Generate test AVB key (demo only)
        run: |
          set -euo pipefail
          openssl genrsa -out testkey_rsa2048.pem 2048
          openssl rsa -in testkey_rsa2048.pem -pubout -out testkey_rsa2048_pub.pem

      - name: Compute padded partition size (leave room for footer/tree)
        id: prep
        run: |
          set -euo pipefail
          SIZE=$(stat -c%s system.img)
          EXTRA=$((64*1024*1024))  # 64 MiB headroom
          PART_SIZE=$(( ( (SIZE + EXTRA + 4095) / 4096 ) * 4096 ))
          echo "part_size=$PART_SIZE" >> $GITHUB_OUTPUT
          echo "orig_size=$SIZE" >> $GITHUB_OUTPUT
          echo "Calculated partition_size=$PART_SIZE (orig=$SIZE)"

      - name: Add dm-verity hashtree footer to system image
        run: |
          set -euo pipefail
          cp system.img system_with_hashtree.img
          SALT=$(openssl rand -hex 32)   # ✅ no newlines, always even-length
          echo "Using salt=$SALT (len=$(echo -n "$SALT" | wc -c))"
          python3 avb/avbtool.py add_hashtree_footer \
            --image system_with_hashtree.img \
            --partition_name system \
            --partition_size "${{ steps.prep.outputs.part_size }}" \
            --hash_algorithm sha256 \
            --salt "$SALT" \
            --key testkey_rsa2048.pem \
            --algorithm SHA256_RSA2048 \
            --do_not_generate_fec

      - name: Build top-level vbmeta from descriptors in image
        run: |
          set -euo pipefail
          python3 avb/avbtool.py make_vbmeta_image \
            --include_descriptors_from_image system_with_hashtree.img \
            --key testkey_rsa2048.pem \
            --algorithm SHA256_RSA2048 \
            --output vbmeta.img

      - name: Inspect augmented image & vbmeta (expect Hashtree)
        run: |
          set -euo pipefail
          python3 avb/avbtool.py info_image --image system_with_hashtree.img | tee info_image.txt
          python3 avb/avbtool.py info_image --image vbmeta.img | tee info_vbmeta.txt

      - name: Compress and upload artifacts
        run: |
          set -euo pipefail
          gzip -9c system_with_hashtree.img > system_with_hashtree.img.gz
          gzip -9c vbmeta.img > vbmeta.img.gz
        shell: bash
      - uses: actions/upload-artifact@v4
        with:
          name: verity-artifacts
          path: |
            system_with_hashtree.img.gz
            vbmeta.img.gz
            info_image.txt
            info_vbmeta.txt

  verify:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 15
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: verity-artifacts

      - name: Decompress artifacts
        run: |
          set -euo pipefail
          gunzip -c system_with_hashtree.img.gz > system_with_hashtree.img
          gunzip -c vbmeta.img.gz > vbmeta.img

      - name: Clone avbtool
        run: |
          set -euo pipefail
          git clone https://android.googlesource.com/platform/external/avb
          ls -la avb
          test -f avb/avbtool.py || { echo "❌ avbtool.py not found after clone"; exit 1; }

      - name: Verify dm-verity / hashtree presence
        run: |
          set -euo pipefail
          echo "---- vbmeta ----"
          python3 avb/avbtool.py info_image --image vbmeta.img | tee verify_vbmeta.txt
          echo "---- augmented system image ----"
          python3 avb/avbtool.py info_image --image system_with_hashtree.img | tee verify_image.txt
          egrep -i "hashtree|hash tree|dm-verity" verify_vbmeta.txt verify_image.txt >/dev/null \
            || (echo "❌ No hashtree/dm-verity descriptors found" && exit 1)

